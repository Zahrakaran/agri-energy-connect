using Agri_EnergyConnect.Models;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;

namespace Agri_EnergyConnect.Data
{
    public static class DbInitializer
    {
        public static async Task SeedAsync(IServiceProvider serviceProvider)
        {
            using var scope = serviceProvider.CreateScope();

            var context = scope.ServiceProvider.GetRequiredService<ApplicationDbContext>();
            var roleManager = scope.ServiceProvider.GetRequiredService<RoleManager<IdentityRole>>();
            var userManager = scope.ServiceProvider.GetRequiredService<UserManager<AppUser>>();

            await context.Database.MigrateAsync();

            // 1. Seed Roles
            string[] roles = { "Farmer", "Employee", "Admin" };
            foreach (var role in roles)
            {
                if (!await roleManager.RoleExistsAsync(role))
                    await roleManager.CreateAsync(new IdentityRole(role));
            }

            // 2. Admin User
            var adminEmail = "admin@agri.com";
            var adminUser = await userManager.FindByEmailAsync(adminEmail);
            if (adminUser == null)
            {
                adminUser = new AppUser
                {
                    UserName = adminEmail,
                    Email = adminEmail,
                    EmailConfirmed = true,
                    FullName = "System Administrator"
                };

                var result = await userManager.CreateAsync(adminUser, "Admin@123");
                if (result.Succeeded)
                    await userManager.AddToRoleAsync(adminUser, "Admin");
            }

            // 3. Thabo Farmer User
            var thaboUser = await userManager.FindByEmailAsync("thabo@agri.com");
            Farmer thaboFarmer = null;

            if (thaboUser == null)
            {
                thaboUser = new AppUser
                {
                    UserName = "thabo@agri.com",
                    Email = "thabo@agri.com",
                    EmailConfirmed = true,
                    FullName = "Thabo Mokoena"
                };

                var result = await userManager.CreateAsync(thaboUser, "Farmer@123");
                if (result.Succeeded)
                    await userManager.AddToRoleAsync(thaboUser, "Farmer");
            }

            if (!context.Farmers.Any(f => f.IdentityUserId == thaboUser.Id))
            {
                thaboFarmer = new Farmer
                {
                    FullName = "Thabo Mokoena",
                    Email = "thabo@agri.com",
                    Location = "Limpopo",
                    ContactNumber = "0821234567",
                    IdentityUserId = thaboUser.Id,
                    Products = new List<Product>
                    {
                        new Product { Name = "Maize", Category = "Grains", ProductionDate = DateTime.Now.AddDays(-10), Price = 25.00m },
                        new Product { Name = "Tomatoes", Category = "Vegetables", ProductionDate = DateTime.Now.AddDays(-5), Price = 15.00m }
                    }
                };
                context.Farmers.Add(thaboFarmer);
            }

            // 4. Nomsa Farmer User
            var nomsaEmail = "nomsa@agri.com";
            var nomsaUser = await userManager.FindByEmailAsync(nomsaEmail);

            if (nomsaUser == null)
            {
                nomsaUser = new AppUser
                {
                    UserName = nomsaEmail,
                    Email = nomsaEmail,
                    EmailConfirmed = true,
                    FullName = "Nomsa Dlamini"
                };

                var result = await userManager.CreateAsync(nomsaUser, "Farmer@123");
                if (result.Succeeded)
                    await userManager.AddToRoleAsync(nomsaUser, "Farmer");
            }

            if (!context.Farmers.Any(f => f.IdentityUserId == nomsaUser.Id))
            {
                var nomsaFarmer = new Farmer
                {
                    FullName = "Nomsa Dlamini",
                    Location = "Eastern Cape",
                    ContactNumber = "0839876543",
                    IdentityUserId = nomsaUser.Id,
                    Email = nomsaEmail,
                    Products = new List<Product>
                    {
                        new Product { Name = "Maize", Category = "Grains", ProductionDate = DateTime.Now.AddDays(-10), Price = 25.00m }
                    }
                };

                context.Farmers.Add(nomsaFarmer);
            }

            try
            {
                await context.SaveChangesAsync();
            }
            catch (DbUpdateException ex)
            {
                Console.WriteLine("Failed to save farmer data: " + ex.Message);
            }

            // 5. Sipho Employee User
            var employeeEmail = "sipho@agri.com";
            var employeeUser = await userManager.FindByEmailAsync(employeeEmail);

            if (employeeUser == null)
            {
                employeeUser = new AppUser
                {
                    UserName = employeeEmail,
                    Email = employeeEmail,
                    EmailConfirmed = true,
                    FullName = "Sipho Khumalo"
                };

                var result = await userManager.CreateAsync(employeeUser, "Employee@123");
                if (result.Succeeded)
                    await userManager.AddToRoleAsync(employeeUser, "Employee");
            }

            if (!context.Employees.Any(e => e.IdentityUserId == employeeUser.Id))
            {
                var siphoEmployee = new Employee
                {
                    FullName = "Sipho Khumalo",
                    Position = "Logistics",
                    ContactNumber = "0725551234",
                    Email = employeeEmail,
                    IdentityUserId = employeeUser.Id
                };

                context.Employees.Add(siphoEmployee);
            }

        }

    }
}
